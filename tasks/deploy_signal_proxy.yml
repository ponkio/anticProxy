- name: Create signal-proxy task def
  ecs_taskdefinition:
    family: "signal-proxy-taskdef"
    task_role_arn: "{{ ecs_role.arn }}"
    execution_role_arn: "{{ ecs_role.arn }}"
    containers:
    - name: "signal-relay"
      essential: true
      image: "{{ anticECR.repository.repositoryUri }}:signal-proxy"
      portMappings:
      - containerPort: 4433
        hostPort:      4433
      logConfiguration:
        logDriver: awslogs
        options:
          awslogs-group: "anticProxy"
          awslogs-region: "{{ cloud_config.region }}"
          awslogs-stream-prefix: "anticProxy-signal-proxy"
      #command: ["/bin/bash","-c 'while :; do sleep 6h & wait $${!}; /opt/nginx/sbin/nginx -s reload; done & /opt/nginx/sbin/nginx -c /etc/nginx/conf.d/nginx.conf -g \"daemon off;\"'"]
    launch_type: FARGATE
    cpu: 512
    memory: 1GB
    state: present
    network_mode: awsvpc

- name: Create an ECS service
  ecs_service:
    state: present
    name: "signal-proxy"
    cluster: "anticProxy"
    task_definition: "signal-proxy-taskdef"
    launch_type: FARGATE
    load_balancers:
      - targetGroupArn: "{{ anticTG.target_group_arn }}"
        containerName: "signal-relay"
        containerPort: 4433
    network_configuration:
      assign_public_ip: yes
      subnets:
      - "{{ cluster_subnets.results[0]['subnet']['id'] }}"
      - "{{ cluster_subnets.results[1]['subnet']['id'] }}"
      - "{{ cluster_subnets.results[2]['subnet']['id'] }}"
      security_groups:
      - "{{ anticSG.results[0]['group_id'] }}"
    desired_count: "3"
    region: "{{ cloud_config.region }}"
    deployment_configuration:
      minimum_healthy_percent: 75
      maximum_percent: 150
